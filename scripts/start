#!/usr/bin/env bash

set -eu
set -o pipefail

export logfile=log/lfs-server-go.log

cd $(dirname $0)/..
# cd /go/src/lfs-server-go
mkdir -p log
go get github.com/tools/godep
godep go build
GO_ENV=${GO_ENV:-dev}
export GO_ENV
which goreman > /dev/null || go get github.com/mattn/goreman
which godep > /dev/null || go get github.com/tools/godep
godep restore

if [[ ("${GO_ENV}" == "test") && (! "`ps -ef | grep '[t]est_ldap'`") ]] ; then
  ./test_ldap_server/test_ldap_server > log/ldap.log 2>&1 &
fi

# set the config, if not set
: ${LFS_SERVER_GO_CONFIG:=config.ini}

if [[ ! -f "${LFS_SERVER_GO_CONFIG}" ]];then
  echo "LFS_SERVER_GO_CONFIG is not set, copying in example"
  # copy over a config if one does not exist
  cp ./config.ini.example config.ini
fi

start(){
  goreman check
  goreman start lfs-server-go
}

start_foreground(){
  # /go/src/lfs-server-go/lfs-server-go
  echo "Waiting for cassandra-1"
  $(dirname $0)/wait-for-it.sh -h cassandra-1 -p 9042 -t 300
  wait_for_it
  ./lfs-server-go
}

: ${DAEMONIZE:=0}

if [[ ${DAEMONIZE} -eq 1 ]]; then
  if [[ "x`ps -ef | grep [l]fs-server-go | grep -v grep`" == "x" ]] ;then
  	goreman run start lfs-server-go >> ${logfile} 2>&1 &
  	echo "Started"
  else
  	echo "Already running"
  fi
else
  start_foreground
fi
